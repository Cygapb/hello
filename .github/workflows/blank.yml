# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUN_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  RUN_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  RUN_REGION: us-central1
  SERVICE_NAME: helloworld
  CLOUDSDK_CORE_PROJECT: "github-action-302303"
  IMAGE: static-site
  DEPLOYMENT_NAME: gke-test 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: mvn -B package --file pom.xml

 # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          run_project: ${{ secrets.RUN_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          
 # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker
          
 # Compile java code
      - name: Compile
        run: javac HelloWorld.java
             
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$RUN_PROJECT/$IMAGE:$GITHUB_SHA" \
           .

    # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$RUN_PROJECT/$IMAGE:$GITHUB_SHA"

#Deploying container in GKE cluster
      - name: Deploying container in GKE cluster
        run: |-
          gcloud config set project $RUN_PROJECT
          gcloud config set compute/zone us-central1-a
          
    ## Creating a GKE cluster
      - name: Creating a GKE cluster
        run: |-
          gcloud container clusters create gk-cluster --num-nodes=1
          gcloud container clusters get-credentials gk-cluster
      
      #Creating deployment
      - name: Creating deployment
        run: |-
          kubectl create deployment web-server --image="gcr.io/$RUN_PROJECT/$IMAGE:$GITHUB_SHA"
          
      #Exposing the Deployment
      - name: Exposing the Deployment
        run: |-
          kubectl expose deployment web-server --type NodePort --port 80 --target-port 80      
